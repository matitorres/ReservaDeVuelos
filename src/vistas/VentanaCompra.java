/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;


import clases.Asiento;
import clases.Cliente;
import clases.Compra;
import clasesData.CompraData;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Collections;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;





/**
 *
 * @author pedro
 */
public class VentanaCompra extends javax.swing.JFrame {

    /**
     * Creates new form VentanaCliente
     */
    
     private TableRowSorter filtro;
     private CompraData gestorCompra = new CompraData();
     private List<Compra> listaCompras = gestorCompra.obtenerCompras();
     public VentanaCompra() {
     
        initComponents();
        soloNumeros(cajaIdCompra);
        soloLetras(cajafechaCompra);
        mostrarCompras(listaCompras);
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        panelDatosCompra = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cajaIdCompra = new javax.swing.JTextField();
        cajafechaCompra = new javax.swing.JTextField();
        botonAgregarCompra = new javax.swing.JButton();
        botonModificarCompra = new javax.swing.JButton();
        botonEliminarCompra = new javax.swing.JButton();
        botonVaciarCompra = new javax.swing.JButton();
        panelListadoCompras = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCompras = new javax.swing.JTable();
        cajaBuscarCompra = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel5.setText("FECHACOMPRA");

        cajaIdCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaIdCompraActionPerformed(evt);
            }
        });

        botonAgregarCompra.setText("AGREGAR");
        botonAgregarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarCompraActionPerformed(evt);
            }
        });

        botonModificarCompra.setText("MODIFICAR");
        botonModificarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarCompraActionPerformed(evt);
            }
        });

        botonEliminarCompra.setText("ELIMINAR");
        botonEliminarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarCompraActionPerformed(evt);
            }
        });

        botonVaciarCompra.setText("VACIAR CAMPOS");
        botonVaciarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVaciarCompraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDatosCompraLayout = new javax.swing.GroupLayout(panelDatosCompra);
        panelDatosCompra.setLayout(panelDatosCompraLayout);
        panelDatosCompraLayout.setHorizontalGroup(
            panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosCompraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosCompraLayout.createSequentialGroup()
                        .addGroup(panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGroup(panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDatosCompraLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cajaIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDatosCompraLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cajafechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(102, 102, 102)
                        .addGroup(panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonModificarCompra)
                            .addComponent(botonAgregarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonEliminarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(botonVaciarCompra))
                .addContainerGap(336, Short.MAX_VALUE))
        );
        panelDatosCompraLayout.setVerticalGroup(
            panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosCompraLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cajaIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAgregarCompra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonModificarCompra)
                    .addGroup(panelDatosCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cajafechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(50, 50, 50)
                .addComponent(botonEliminarCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(botonVaciarCompra)
                .addContainerGap())
        );

        tablaCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaCompras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaComprasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCompras);

        cajaBuscarCompra.setText("Buscar por Id");
        cajaBuscarCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cajaBuscarCompraMouseClicked(evt);
            }
        });
        cajaBuscarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaBuscarCompraActionPerformed(evt);
            }
        });
        cajaBuscarCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cajaBuscarCompraKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelListadoComprasLayout = new javax.swing.GroupLayout(panelListadoCompras);
        panelListadoCompras.setLayout(panelListadoComprasLayout);
        panelListadoComprasLayout.setHorizontalGroup(
            panelListadoComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListadoComprasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelListadoComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cajaBuscarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        panelListadoComprasLayout.setVerticalGroup(
            panelListadoComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListadoComprasLayout.createSequentialGroup()
                .addComponent(cajaBuscarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelDatosCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 535, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelListadoCompras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(panelDatosCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(panelListadoCompras, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        jTabbedPane2.addTab("COMPRAS", jPanel2);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("COMPRAS");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cajaBuscarCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cajaBuscarCompraKeyTyped
        cajaBuscarCompra.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e){
                String cadena = (cajaBuscarCompra.getText());
                cajaBuscarCompra.setText(cadena);
                repaint();
                filtro();
            }
        });
        filtro = new TableRowSorter (tablaCompras.getModel());
        tablaCompras.setRowSorter(filtro);
    }//GEN-LAST:event_cajaBuscarCompraKeyTyped

    private void cajaBuscarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaBuscarCompraActionPerformed

    }//GEN-LAST:event_cajaBuscarCompraActionPerformed

    private void cajaBuscarCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cajaBuscarCompraMouseClicked
        cajaBuscarCompra.setText(null);
    }//GEN-LAST:event_cajaBuscarCompraMouseClicked

    private void tablaComprasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaComprasMouseClicked
        llenarCamposCompra();// TODO add your handling code here:
    }//GEN-LAST:event_tablaComprasMouseClicked

    private void botonVaciarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVaciarCompraActionPerformed
        vaciarCajasCompra();
    }//GEN-LAST:event_botonVaciarCompraActionPerformed

    private void botonEliminarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarCompraActionPerformed
        if(!cajaIdCompra.getText().equals("")){
            // SI SE HA INGRESADO UN Id
            int id = Integer.parseInt(cajaIdCompra.getText());
            if (0 == JOptionPane.showConfirmDialog(this,"¿Esta seguro de eliminar esta compra?")) {
                //EXISTE EN LA BASE DE DATOS?

                int exito;
                try {
                    exito = gestorCompra.borrarCompra(id);
                } catch (SQLException ex) {
                    Logger.getLogger(VentanaCompra.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null,"Se ha eliminado la compra exitosamente");

            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Ingrese id de la compra");
        }
    }//GEN-LAST:event_botonEliminarCompraActionPerformed

    private void botonModificarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarCompraActionPerformed

        int fila = tablaCompras.getSelectedRow();
        String id_aux = tablaCompras.getValueAt(fila, 0).toString();
        int id= Integer.parseInt(id_aux);

        if(!cajasVaciasCompra()){

            if (0 == JOptionPane.showConfirmDialog(this,"¿Esta seguro de hacer esta modificacion?")) {

                Compra cli = new Compra(Integer.parseInt(cajaIdCompra.getText()));
                int exito;
                try {
                    exito = gestorCompra.actualizarCompra(cli);
                    if(exito >0){
                        JOptionPane.showMessageDialog(null,"Operacion exitosa!");
                    }
                } catch (SQLException ex) {

                    JOptionPane.showMessageDialog(null,"No existe tal compra, o problemas en la conexion!");

                }

            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Llene los campos vacios");
        }

    }//GEN-LAST:event_botonModificarCompraActionPerformed

    private void botonAgregarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarCompraActionPerformed
        //CARGO LOS DATOS
        //COMO TODAS LAS CAJAS SON STRINGS, ENTONCES AQUELLOS DATOS ENTEROS DEL CLIENTE LOS TRANFORMO DE STRING A ENTERO CON:
        //Integer.parseInt(String s)
        if(!cajasVaciasCompra()){

            if (0 == JOptionPane.showConfirmDialog(this,"¿Esta seguro de hacer este registro?")) {

                Compra nuevo = new Compra(Integer.parseInt(cajaIdCompra.getText()));
                //LO AGREGO A LA BASE DE DATOS
                //CONSULTO SI YA EXISTE O NO CLIENTE CON ESE DNI

                if(!gestorCompra.existe(nuevo.getIdCompra())){ // osea es un id valido
                    // SI NO EXISTE HACEMOS LA ALTA
                    int exito;
                    try {
                        exito = gestorCompra.guardarCompra(nuevo);

                        listaCompras.add(nuevo);
                        // pasar_valores_porPasaporte(listaCompra);
                        JOptionPane.showMessageDialog(null,"Registro exitoso!");

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null,"Error al agregar nueva compra a la db!");
                    }

                }
                else{
                    // SI existe AVISAMOS
                    JOptionPane.showMessageDialog(null,"Ya existe una compra con ese id, verifique los campos.");
                }

            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Error. debe Llenar todos los campos");
        }
    }//GEN-LAST:event_botonAgregarCompraActionPerformed

    private void cajaIdCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaIdCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaIdCompraActionPerformed

    
  public void mostrarCompras( List<Compra> lista){
    
      //llamamos a los metodos para conectar ala BASE DE DATOS
      
        //Collections.sort(lista);
        String[] columnas = {"id","Dni Cliente","Nombre Cliente","Aerolinea","Ciudad Origen","Ciudad Destino","Fecha de Salida","Fecha de Arribo", "Asiento", "Fecha de Compra"};
        
        DefaultTableModel dtm = new DefaultTableModel(null,columnas);
         int i= 0;
         while(i<lista.size()){
             String[] filas = {""+lista.get(i).getIdCompra(), ""+lista.get(i).getCliente().getDni(), ""+lista.get(i).getCliente().getNombre()+" "+lista.get(i).getCliente().getApellido(), ""+lista.get(i).getAsiento().getVuelo().getAerolinea(), ""+lista.get(i).getAsiento().getVuelo().getCiudadOrigen().getNombre(), ""+lista.get(i).getAsiento().getVuelo().getCiudadDestino().getNombre(), ""+lista.get(i).getAsiento().getVuelo().getFechaSalida(), ""+lista.get(i).getAsiento().getVuelo().getFechaArribo(), ""+lista.get(i).getAsiento().getCodigoAsiento(), ""+lista.get(i).getFechaCompra()};
              i++;            
         dtm.addRow(filas);
     
       }
         tablaCompras.setModel(dtm);
    }
      
        public void soloLetras(JTextField texto){
        texto.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent evento){
                char c=evento.getKeyChar();
                if (Character.isDigit(c)){
                    getToolkit().beep();
                    evento.consume();}
            }
        });
    }
    public void soloNumeros(JTextField texto){
        texto.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent evento){
                char c=evento.getKeyChar();
                if (!Character.isDigit(c)){
                    getToolkit().beep();
                    evento.consume();}
            }
        });
    }
    
     public void vaciarCajasCompra(){ 
     cajaIdCompra.setText("");cajafechaCompra.setText("");
     }
    
     public void llenarCamposCompra(){
          int fila = tablaCompras.getSelectedRow();
          String id_aux = tablaCompras.getValueAt(fila, 0).toString();
          int id= Integer.parseInt(id_aux);
          Compra compra = gestorCompra.buscarCompra(id);
          cajaIdCompra.setText(""+compra.getIdCompra());
          cajafechaCompra.setText(""+compra.getFechaCompra()); 
     } 
    
        private boolean cajasVaciasCompra(){
        boolean hayvacias = false;
        
        if(cajaIdCompra.getText().equals("") ){
              hayvacias=true;
        }
        
     
        return hayvacias;
    }   
        public void filtro(){
        filtro.setRowFilter(RowFilter.regexFilter(cajaBuscarCompra.getText(), 2,3,4));
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             
                    new VentanaCompra().setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarCompra;
    private javax.swing.JButton botonEliminarCompra;
    private javax.swing.JButton botonModificarCompra;
    private javax.swing.JButton botonVaciarCompra;
    private javax.swing.JTextField cajaBuscarCompra;
    private javax.swing.JTextField cajaIdCompra;
    private javax.swing.JTextField cajafechaCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JPanel panelDatosCompra;
    private javax.swing.JPanel panelListadoCompras;
    private javax.swing.JTable tablaCompras;
    // End of variables declaration//GEN-END:variables
}
